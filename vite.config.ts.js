// vite.config.ts
import { defineConfig } from "vite";
import vue from "@vitejs/plugin-vue";
import pxtovw from "postcss-px-to-viewport";
import path from "path";
import AutoImport from "unplugin-auto-import/vite";
import Components from "unplugin-vue-components/vite";
import { ElementPlusResolver } from "unplugin-vue-components/resolvers";
var my_pxtovw = pxtovw({
  unitToConvert: "px",
  viewportWidth: 1920,
  unitPrecision: 5,
  propList: ["*"],
  viewportUnit: "vw",
  fontViewportUnit: "vw",
  selectorBlackList: [],
  minPixelValue: 1,
  mediaQuery: false,
  replace: true,
  exclude: void 0,
  include: void 0,
  landscape: false,
  landscapeUnit: "vw",
  landscapeWidth: 1920
});
var vite_config_default = defineConfig({
  plugins: [
    vue(),
    AutoImport({
      resolvers: [ElementPlusResolver()]
    }),
    Components({
      resolvers: [ElementPlusResolver()]
    })
  ],
  css: {
    preprocessorOptions: {
      scss: {
        additionalData: `@import "@/design/var.scss";`
      }
    },
    devSourcemap: false
  },
  base: "./",
  server: {
    host: "0.0.0.0",
    port: 8888
  },
  resolve: {
    alias: {
      "@": path.resolve("D:\\git\u9879\u76EE\\Learn_own\\learn_vue3\\vue3_own", "src")
    },
    extensions: [".mjs", ".js", ".ts", ".jsx", ".tsx", ".json", ".webm"]
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8qXHJcbiAqIEBBdXRob3I6IFx1NTkyN1x1OEJEQVx1NEUxM1x1NzUyOCBjYzI1MjQyNjExODNAMTYzLmNvbVxyXG4gKiBARGF0ZTogMjAyMy0wOS0xMyAwOTo0NTo0NFxyXG4gKiBATGFzdEVkaXRvcnM6IFx1NTkyN1x1OEJEQVx1NEUxM1x1NzUyOCBjYzI1MjQyNjExODNAMTYzLmNvbVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIzLTEwLTIzIDEzOjQ3OjM0XHJcbiAqIEBGaWxlUGF0aDogXFxMZWFybl9vd25cXGxlYXJuX3Z1ZTNcXHZ1ZTNcXHZpdGUuY29uZmlnLnRzXHJcbiAqIEBEZXNjcmlwdGlvbjogXHU4RkQ5XHU2NjJGXHU5RUQ4XHU4QkE0XHU4QkJFXHU3RjZFLFx1OEJGN1x1OEJCRVx1N0Y2RWBjdXN0b21NYWRlYCwgXHU2MjUzXHU1RjAwa29yb0ZpbGVIZWFkZXJcdTY3RTVcdTc3MEJcdTkxNERcdTdGNkUgXHU4RkRCXHU4ODRDXHU4QkJFXHU3RjZFOiBodHRwczovL2dpdGh1Yi5jb20vT0JLb3JvMS9rb3JvMUZpbGVIZWFkZXIvd2lraS8lRTklODUlOEQlRTclQkQlQUVcclxuICovXHJcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCI7XHJcbmltcG9ydCB2dWUgZnJvbSBcIkB2aXRlanMvcGx1Z2luLXZ1ZVwiO1xyXG4vLyBpbXBvcnQgeyB2aXN1YWxpemVyIH0gZnJvbSBcInJvbGx1cC1wbHVnaW4tdmlzdWFsaXplclwiO1xyXG5pbXBvcnQgcHh0b3Z3IGZyb20gXCJwb3N0Y3NzLXB4LXRvLXZpZXdwb3J0XCI7XHJcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XHJcbmltcG9ydCBBdXRvSW1wb3J0IGZyb20gXCJ1bnBsdWdpbi1hdXRvLWltcG9ydC92aXRlXCI7XHJcbmltcG9ydCBDb21wb25lbnRzIGZyb20gXCJ1bnBsdWdpbi12dWUtY29tcG9uZW50cy92aXRlXCI7XHJcbmltcG9ydCB7IEVsZW1lbnRQbHVzUmVzb2x2ZXIgfSBmcm9tIFwidW5wbHVnaW4tdnVlLWNvbXBvbmVudHMvcmVzb2x2ZXJzXCI7XHJcblxyXG5jb25zdCBteV9weHRvdncgPSBweHRvdncoe1xyXG4gIHVuaXRUb0NvbnZlcnQ6IFwicHhcIiwgLy8gXHU5NzAwXHU4OTgxXHU4RjZDXHU2MzYyXHU3Njg0XHU1MzU1XHU0RjREXHVGRjBDXHU5RUQ4XHU4QkE0XHU0RTNBXCJweFwiXHJcbiAgdmlld3BvcnRXaWR0aDogMTkyMCwgLy8gXHU4QkJFXHU4QkExXHU3QTNGXHU3Njg0XHU4OUM2XHU1M0UzXHU1QkJEXHU1RUE2XHJcbiAgdW5pdFByZWNpc2lvbjogNSwgLy8gXHU1MzU1XHU0RjREXHU4RjZDXHU2MzYyXHU1NDBFXHU0RkREXHU3NTU5XHU3Njg0XHU3Q0JFXHU1RUE2XHJcbiAgcHJvcExpc3Q6IFtcIipcIl0sIC8vIFx1ODBGRFx1OEY2Q1x1NTMxNlx1NEUzQXZ3XHU3Njg0XHU1QzVFXHU2MDI3XHU1MjE3XHU4ODY4XHJcbiAgdmlld3BvcnRVbml0OiBcInZ3XCIsIC8vIFx1NUUwQ1x1NjcxQlx1NEY3Rlx1NzUyOFx1NzY4NFx1ODlDNlx1NTNFM1x1NTM1NVx1NEY0RFxyXG4gIGZvbnRWaWV3cG9ydFVuaXQ6IFwidndcIiwgLy8gXHU1QjU3XHU0RjUzXHU0RjdGXHU3NTI4XHU3Njg0XHU4OUM2XHU1M0UzXHU1MzU1XHU0RjREXHJcbiAgc2VsZWN0b3JCbGFja0xpc3Q6IFtdLCAvLyBcdTk3MDBcdTg5ODFcdTVGRkRcdTc1NjVcdTc2ODRDU1NcdTkwMDlcdTYyRTlcdTU2NjhcdUZGMENcdTRFMERcdTRGMUFcdThGNkNcdTRFM0FcdTg5QzZcdTUzRTNcdTUzNTVcdTRGNERcdUZGMENcdTRGN0ZcdTc1MjhcdTUzOUZcdTY3MDlcdTc2ODRweFx1N0I0OVx1NTM1NVx1NEY0RFx1MzAwMlxyXG4gIG1pblBpeGVsVmFsdWU6IDEsIC8vIFx1OEJCRVx1N0Y2RVx1NjcwMFx1NUMwRlx1NzY4NFx1OEY2Q1x1NjM2Mlx1NjU3MFx1NTAzQ1x1RkYwQ1x1NTk4Mlx1Njc5Q1x1NEUzQTFcdTc2ODRcdThCRERcdUZGMENcdTUzRUFcdTY3MDlcdTU5MjdcdTRFOEUxXHU3Njg0XHU1MDNDXHU0RjFBXHU4OEFCXHU4RjZDXHU2MzYyXHJcbiAgbWVkaWFRdWVyeTogZmFsc2UsIC8vIFx1NUE5Mlx1NEY1M1x1NjdFNVx1OEJFMlx1OTFDQ1x1NzY4NFx1NTM1NVx1NEY0RFx1NjYyRlx1NTQyNlx1OTcwMFx1ODk4MVx1OEY2Q1x1NjM2Mlx1NTM1NVx1NEY0RFxyXG4gIHJlcGxhY2U6IHRydWUsIC8vICBcdTY2MkZcdTU0MjZcdTc2RjRcdTYzQTVcdTY2RjRcdTYzNjJcdTVDNUVcdTYwMjdcdTUwM0NcdUZGMENcdTgwMENcdTRFMERcdTZERkJcdTUyQTBcdTU5MDdcdTc1MjhcdTVDNUVcdTYwMjdcclxuICBleGNsdWRlOiB1bmRlZmluZWQsIC8vIFx1NUZGRFx1NzU2NVx1NjdEMFx1NEU5Qlx1NjU4N1x1NEVGNlx1NTkzOVx1NEUwQlx1NzY4NFx1NjU4N1x1NEVGNlx1NjIxNlx1NzI3OVx1NUI5QVx1NjU4N1x1NEVGNlx1RkYwQ1x1NEY4Qlx1NTk4MiAnbm9kZV9tb2R1bGVzJyBcdTRFMEJcdTc2ODRcdTY1ODdcdTRFRjZcclxuICBpbmNsdWRlOiB1bmRlZmluZWQsIC8vIFx1NTk4Mlx1Njc5Q1x1OEJCRVx1N0Y2RVx1NEU4NmluY2x1ZGVcdUZGMENcdTkwQTNcdTVDMDZcdTUzRUFcdTY3MDlcdTUzMzlcdTkxNERcdTUyMzBcdTc2ODRcdTY1ODdcdTRFRjZcdTYyNERcdTRGMUFcdTg4QUJcdThGNkNcdTYzNjJcclxuICBsYW5kc2NhcGU6IGZhbHNlLCAvLyBcdTY2MkZcdTU0MjZcdTZERkJcdTUyQTBcdTY4MzlcdTYzNkUgbGFuZHNjYXBlV2lkdGggXHU3NTFGXHU2MjEwXHU3Njg0XHU1QTkyXHU0RjUzXHU2N0U1XHU4QkUyXHU2NzYxXHU0RUY2IEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcclxuICBsYW5kc2NhcGVVbml0OiBcInZ3XCIsIC8vIFx1NkEyQVx1NUM0Rlx1NjVGNlx1NEY3Rlx1NzUyOFx1NzY4NFx1NTM1NVx1NEY0RFxyXG4gIGxhbmRzY2FwZVdpZHRoOiAxOTIwLCAvLyBcdTZBMkFcdTVDNEZcdTY1RjZcdTRGN0ZcdTc1MjhcdTc2ODRcdTg5QzZcdTUzRTNcdTVCQkRcdTVFQTZcclxufSk7XHJcblxyXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xyXG4gIHBsdWdpbnM6IFtcclxuICAgIHZ1ZSgpLFxyXG4gICAgQXV0b0ltcG9ydCh7XHJcbiAgICAgIHJlc29sdmVyczogW0VsZW1lbnRQbHVzUmVzb2x2ZXIoKV0sXHJcbiAgICB9KSxcclxuICAgIENvbXBvbmVudHMoe1xyXG4gICAgICByZXNvbHZlcnM6IFtFbGVtZW50UGx1c1Jlc29sdmVyKCldLFxyXG4gICAgfSksXHJcbiAgXSxcclxuICBjc3M6IHtcclxuICAgIHByZXByb2Nlc3Nvck9wdGlvbnM6IHtcclxuICAgICAgc2Nzczoge1xyXG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBgQGltcG9ydCBcIkAvZGVzaWduL3Zhci5zY3NzXCI7YCxcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICAvL1x1NUYwMFx1NTNEMVx1OEZDN1x1N0EwQlx1NEUyRFx1NjYyRlx1NTQyNlx1NTQyRnNvdXJjZW1hcFxyXG4gICAgZGV2U291cmNlbWFwOiBmYWxzZSxcclxuICB9LFxyXG4gIGJhc2U6IFwiLi9cIixcclxuICBzZXJ2ZXI6IHtcclxuICAgIC8vIG9wZW46IHRydWUsXHJcbiAgICBob3N0OiBcIjAuMC4wLjBcIixcclxuICAgIHBvcnQ6IDg4ODgsXHJcbiAgfSxcclxuICByZXNvbHZlOiB7XHJcbiAgICBhbGlhczoge1xyXG4gICAgICBcIkBcIjogcGF0aC5yZXNvbHZlKFwiRDpcXFxcZ2l0XHU5ODc5XHU3NkVFXFxcXExlYXJuX293blxcXFxsZWFybl92dWUzXFxcXHZ1ZTNfb3duXCIsIFwic3JjXCIpLFxyXG4gICAgfSxcclxuICAgIGV4dGVuc2lvbnM6IFtcIi5tanNcIiwgXCIuanNcIiwgXCIudHNcIiwgXCIuanN4XCIsIFwiLnRzeFwiLCBcIi5qc29uXCIsIFwiLndlYm1cIl0sIC8vIFx1NkRGQlx1NTJBMCAnLndlYm0nIFx1NjU4N1x1NEVGNlx1N0M3Qlx1NTc4QlxyXG4gIH0sXHJcbn0pO1xyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBUUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNLFlBQVksT0FBTztBQUFBLEVBQ3ZCLGVBQWU7QUFBQSxFQUNmLGVBQWU7QUFBQSxFQUNmLGVBQWU7QUFBQSxFQUNmLFVBQVUsQ0FBQyxHQUFHO0FBQUEsRUFDZCxjQUFjO0FBQUEsRUFDZCxrQkFBa0I7QUFBQSxFQUNsQixtQkFBbUIsQ0FBQztBQUFBLEVBQ3BCLGVBQWU7QUFBQSxFQUNmLFlBQVk7QUFBQSxFQUNaLFNBQVM7QUFBQSxFQUNULFNBQVM7QUFBQSxFQUNULFNBQVM7QUFBQSxFQUNULFdBQVc7QUFBQSxFQUNYLGVBQWU7QUFBQSxFQUNmLGdCQUFnQjtBQUNsQixDQUFDO0FBR0QsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUztBQUFBLElBQ1AsSUFBSTtBQUFBLElBQ0osV0FBVztBQUFBLE1BQ1QsV0FBVyxDQUFDLG9CQUFvQixDQUFDO0FBQUEsSUFDbkMsQ0FBQztBQUFBLElBQ0QsV0FBVztBQUFBLE1BQ1QsV0FBVyxDQUFDLG9CQUFvQixDQUFDO0FBQUEsSUFDbkMsQ0FBQztBQUFBLEVBQ0g7QUFBQSxFQUNBLEtBQUs7QUFBQSxJQUNILHFCQUFxQjtBQUFBLE1BQ25CLE1BQU07QUFBQSxRQUNKLGdCQUFnQjtBQUFBLE1BQ2xCO0FBQUEsSUFDRjtBQUFBLElBRUEsY0FBYztBQUFBLEVBQ2hCO0FBQUEsRUFDQSxNQUFNO0FBQUEsRUFDTixRQUFRO0FBQUEsSUFFTixNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsRUFDUjtBQUFBLEVBQ0EsU0FBUztBQUFBLElBQ1AsT0FBTztBQUFBLE1BQ0wsS0FBSyxLQUFLLFFBQVEsd0RBQThDLEtBQUs7QUFBQSxJQUN2RTtBQUFBLElBQ0EsWUFBWSxDQUFDLFFBQVEsT0FBTyxPQUFPLFFBQVEsUUFBUSxTQUFTLE9BQU87QUFBQSxFQUNyRTtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
